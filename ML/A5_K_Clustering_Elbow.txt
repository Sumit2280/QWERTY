import pandas as pd
import numpy as np

df = pd.read_csv('sales_data_sample.csv')
df

df.head()

df.head(10)

df.tail()

df.tail(10)

df.sample()

df.sample(5)

df.describe()

df.info()

df.columns

df.dtypes

df.shape[0]

df.shape[1]

df.isnull().sum()

df.dropna()

df.isnull().sum()

df_drop  = ['ADDRESSLINE1', 'ADDRESSLINE2', 'STATUS','POSTALCODE', 'CITY', 'TERRITORY', 'PHONE', 'STATE', 'CONTACTFIRSTNAME', 'CONTACTLASTNAME', 'CUSTOMERNAME', 'ORDERNUMBER','COUNTRY','PRODUCTLINE','DEALSIZE', 'ORDERDATE']
df = df.drop(df_drop, axis=1)


from sklearn.preprocessing import LabelEncoder
le = LabelEncoder()
df['PRODUCTCODE'] = le.fit_transform(df['PRODUCTCODE'])
df

from sklearn.cluster import KMeans
distortions = [] # Within Cluster Sum of Squares from the centroid
K = range(1, 10)
for k in K:
    kmeanModel = KMeans(n_clusters = k)
    kmeanModel.fit(df)
    distortions.append(kmeanModel.inertia_)

distortions


plt.figure(figsize=(16,8))
plt.plot(K, distortions, 'bx-')
plt.xlabel('k')
plt.ylabel('Distortion')
plt.title('The Elbow Method showing the optimal k')
plt.show()



